@using System;
@using Destiny.Core.Flow.CodeGenerator;

@{

    ProjectMetadata metadata = Model;
}


using System;
using System.Collections.Generic;
using System.ComponentModel;
using Destiny.Core.Flow.Entity;
using Destiny.Core.Flow.Mapping;
using @(metadata.Namespace).Entities;

namespace @(metadata.Namespace).Dtos
{

    /// &lt;summary&gt;
    /// @(string.IsNullOrEmpty(metadata.EntityMetadata.DisplayName) ? metadata.EntityMetadata.EntityName : metadata.EntityMetadata.DisplayName)
    /// &lt;/summary&gt;
    [AutoMapping(typeof(@metadata.EntityMetadata.EntityName))]
    public partial class @(metadata.EntityMetadata.EntityName)InputDto : InputDto&lt;@(metadata.EntityMetadata.PrimaryKeyType)&gt;
    {
    @foreach (var property in metadata.EntityMetadata.Properties.Where(o => o.IsInputDto))
    {


        @:/// &lt;summary&gt;
        @:/// 获取或设置 @property.DisplayName
        @:/// &lt;/summary&gt;
        @:public @(string.IsNullOrEmpty(property.AggregateType)?TypeHelper.ToSingleTypeName(property.CSharpType,property.IsNullable):TypeHelper.GetAggregate(property.AggregateType,property.CSharpType,property.IsNullable)) @property.PropertyName { get; set; }


    }

    }
}
